name: Upload Release Tarball

on:
  release:
    types: [published]
  pull_request:
    paths: [.github/workflows/release_tarball.yml]
  workflow_dispatch:

jobs:
  release_tarball:
    name: Create and Upload Release Tarball
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
      - name: Fake name for PRs
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "REL_GITHUB_REF=refs/tags/pr-tag" >> "$GITHUB_ENV"
      - name: Real name for non-PRs
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "REL_GITHUB_REF=$GITHUB_REF" >> "$GITHUB_ENV"
      - name: Set filenames
        run: |
          tag_or_branch="${REL_GITHUB_REF#refs/tags/}"
          tag_or_branch="${tag_or_branch#refs/heads/}"
          # replace directory separators with _ in branch name
          tag_or_branch="${tag_or_branch//\//_}"
          echo "RELEASE_NAME=digital_rf-$tag_or_branch" >> "$GITHUB_ENV"
          echo "RELEASE_FILE=digital_rf-$tag_or_branch.tar.gz" >> "$GITHUB_ENV"
      - name: Create source distribution
        run: |
            # Create new folder with specified name so extracting the archive yields that
            rm -rf "/tmp/$RELEASE_NAME"
            cp -r "$PWD" "/tmp/$RELEASE_NAME"
            mv "/tmp/$RELEASE_NAME" .
            # Clean up .git repo
            rm -rf "$RELEASE_NAME"/.git
            # Create archive
            tar -czf "$RELEASE_FILE" "$RELEASE_NAME"
            echo "Created source archive $RELEASE_FILE with content: $(ls -a "$RELEASE_NAME")"
      - name: Upload source distribution for release
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: ${{env.RELEASE_FILE}}
      - name: Upload source distribution to GHA artifacts
        if: ${{ github.event_name != 'release' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_FILE }}
          path: ${{ env.RELEASE_FILE }}
